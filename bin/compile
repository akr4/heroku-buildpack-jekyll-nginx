#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

# to avoid 'invalid byte sequence in US-ASCII'
export LANG=en_US.UTF-8

# config
NGINX_VERSION="1.0.14"
S3_BUCKET="essh-heroku-buildpack-nginx"

# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# s3 packages
NGINX_PACKAGE="http://${S3_BUCKET}.s3.amazonaws.com/nginx-${NGINX_VERSION}.tgz"

# vendor directories
VENDORED_NGINX=$(mktemp -d -t nginx.XXXXXX)

mkdir -p $BUILD_DIR $CACHE_DIR

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# download and upack packages
echo "-----> Fetching nginx binaries"
curl $NGINX_PACKAGE -s -o - | tar xzf - -C $VENDORED_NGINX

# vendor nginx into the slug
echo "-----> Vendoring nginx $NGINX_VERSION"
mkdir -p "$BUILD_DIR/bin"
cp "$VENDORED_NGINX/sbin/nginx" "$BUILD_DIR/bin/nginx"

# build nginx config unless overridden by user
if [ ! -f $BUILD_DIR/conf/nginx.conf ] ; then
  echo "-----> Using default nginx.conf.erb"
  mkdir -p $BUILD_DIR/conf
	cp $LP_DIR/conf/nginx.conf.erb $BUILD_DIR/conf/nginx.conf.erb
fi

# build mime.types unless overridden by user
if [ ! -f $BUILD_DIR/conf/mime.types ] ; then
  echo "-----> Using default mime.types"
  mkdir -p $BUILD_DIR/conf
	cp $LP_DIR/conf/mime.types $BUILD_DIR/conf/mime.types
fi


echo "-----> Compiling Jekyll site"

# Install Jekyll into hidden directory in app roote

cat << EOF > ~/.gemrc
gemhome: $BUILD_DIR/.gems
gempath:
- $BUILD_DIR/.gems
EOF

/usr/local/bin/gem install liquid -v 2.2.2 --no-rdoc --no-ri | indent
/usr/local/bin/gem install jekyll redcarpet jekyll-less --no-rdoc --no-ri | indent


# Run Jekyll
echo "Running Jekyll" | indent
export GEM_HOME=$BUILD_DIR/.gems
export PATH=$BUILD_DIR/.gems/bin:$PATH
cd $BUILD_DIR
$BUILD_DIR/.gems/bin/jekyll build | indent



# build a startup script
cat <<EOF >"$BUILD_DIR/bin/start_nginx"
#!/usr/bin/env bash
erb conf/nginx.conf.erb > conf/nginx.conf
mkdir -p logs
touch logs/access.log logs/error.log
(tail -qF -n 0 --pid=\$\$ logs/*.log &)
exec bin/nginx -p .
EOF
chmod +x "$BUILD_DIR/bin/start_nginx"
